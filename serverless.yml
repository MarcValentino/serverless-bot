service: minionbot
app: minionbot
tenant: vwooosh

provider:
  name: aws
  runtime: nodejs10.x
  #region: us-east-1
  #vpc:
  #  securityGroupIds:
  #    - sg-060b5154862e29bad 
  #  subnetIds:
  #    - subnet-36163418
  #    - subnet-3d071e32
  #    - subnet-56b1da68
  #environment:
  #  MYSQLHOST: 'botdb.cluster-cksrhumlppv3.us-east-1.rds.amazonaws.com'
  #  MYSQLPORT: '3306'
  #  MYSQLUSER: 'botAdmin'
  #  MYSQLPASS: 'Marc06021999'
  #  MYSQLDATABASE: 'botdb'
  #iamRoleStatements: #O que essas funções podem fazer
  #  - Effect: Allow #Permite algumas coisas (para restringir, usar Restrict)
  #    Action:
  #      - s3:GetObject
  #      - s3:PutObject
  #    Resource:
  #      -"arn:aws:s3:::*" # * para todos os lugares do s3

functions:
  hello:
    handler: handler.handler
    layers:
      - {Ref: LibsLambdaLayer}
    
    #environment:
      #bucket: minionbot
    events: #Quais eventos ele vai ouvir
      - http:
          path: /
          method: post
          cors: true        
     # - s3:
      #    bucket: minionbot
       #   event: s3:ObjectCreated:* #Quando qualquer arquivo for criado
layers:
  libs:
    path: layer
    compatibleRuntimes:
      - nodejs10.x